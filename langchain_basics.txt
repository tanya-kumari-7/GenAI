
LangChain Basics
=================

LangChain is a powerful framework for building applications with language models. It allows developers to connect large language models (LLMs) with external data sources and chains of logic, making it easy to create conversational agents, document Q&A systems, and more.

Why LangChain?
--------------
LangChain simplifies:
- Connecting LLMs to real-world data (e.g., PDFs, databases, APIs)
- Managing the flow of prompts and responses
- Creating agents that use tools and reasoning

Core Concepts
=============

1. LLMs (Large Language Models)
-------------------------------
LangChain supports models from OpenAI, Hugging Face, and others.

Example:
```python
from langchain.llms import OpenAI
llm = OpenAI(temperature=0.7)
llm("Tell me a joke about data science.")
```

2. Prompt Templates
-------------------
LangChain allows creating reusable prompt templates.

Example:
```python
from langchain.prompts import PromptTemplate

template = "What are 5 reasons why {topic} is important?"
prompt = PromptTemplate(input_variables=["topic"], template=template)
print(prompt.format(topic="AI in education"))
```

3. Chains
---------
Chains are sequences of calls (to LLMs, tools, functions, etc.).

Example: Simple LLM Chain
```python
from langchain.chains import LLMChain

chain = LLMChain(llm=llm, prompt=prompt)
output = chain.run("climate change")
```

4. Agents
---------
Agents decide what actions to take using reasoning (e.g., use a calculator, search, etc.).

Example:
- You ask: "What's the weather in New York and what should I wear?"
- The agent looks up the weather, then reasons about clothing.

5. Tools
--------
LangChain integrates tools (APIs, calculators, Python REPL, etc.)

Example:
```python
from langchain.agents import load_tools
tools = load_tools(["serpapi", "llm-math"], llm=llm)
```

6. Memory
---------
LangChain supports conversational memory.

Example:
- Short-term memory: recent interactions
- Long-term memory: vector databases for knowledge retention

7. Document Loaders and Vector Stores
-------------------------------------
LangChain can load and index documents (PDFs, Notion pages, etc.)

Example:
```python
from langchain.document_loaders import PyPDFLoader
from langchain.vectorstores import FAISS
```

It allows Q&A over docs using retrieval + LLM.

Use Cases
=========
- Chatbots with memory
- Document question answering
- Code explanation bots
- Smart customer service agents
- AI apps that use APIs or internal databases

